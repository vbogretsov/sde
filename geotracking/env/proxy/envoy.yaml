static_resources:
  listeners:
    - name: app
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  # - name: envoy.access_loggers.file
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                  #     path: /dev/stdout
                  #     log_format:
                  #       json_format:
                  #         backend: app
                  #         start_time: "%START_TIME%"
                  #         method: "%REQ(:METHOD)%"
                  #         path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                  #         protocol: "%PROTOCOL%"
                  #         response_code: "%RESPONSE_CODE%"
                  #         response_flags: "%RESPONSE_FLAGS%"
                  #         user_agent: "%REQ(USER-AGENT)%"
                  #         x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                  #         authority: "%REQ(:AUTHORITY)%"
                  #         upstream_host: "%UPSTREAM_HOST%"
                  #         request_duration_ms: "%DURATION%"
                  #         correlation_id: "%REQ(x-correlation-id)%"
                route_config:
                  name: app_route
                  virtual_hosts:
                    - name: app_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: app_cluster
                            timeout: 0s
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

    - name: minio_9000
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        json_format:
                          backend: s3
                          start_time: "%START_TIME%"
                          method: "%REQ(:METHOD)%"
                          path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                          protocol: "%PROTOCOL%"
                          response_code: "%RESPONSE_CODE%"
                          response_flags: "%RESPONSE_FLAGS%"
                          user_agent: "%REQ(USER-AGENT)%"
                          x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                          authority: "%REQ(:AUTHORITY)%"
                          upstream_host: "%UPSTREAM_HOST%"
                          request_duration_ms: "%DURATION%"
                          correlation_id: "%REQ(x-correlation-id)%"
                route_config:
                  name: minio_route
                  virtual_hosts:
                    - name: minio_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: minio_cluster
                            timeout: 0s
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

    - name: panda_ui_8081
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8081
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        json_format:
                          backend: s3
                          start_time: "%START_TIME%"
                          method: "%REQ(:METHOD)%"
                          path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                          protocol: "%PROTOCOL%"
                          response_code: "%RESPONSE_CODE%"
                          response_flags: "%RESPONSE_FLAGS%"
                          user_agent: "%REQ(USER-AGENT)%"
                          x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                          authority: "%REQ(:AUTHORITY)%"
                          upstream_host: "%UPSTREAM_HOST%"
                          request_duration_ms: "%DURATION%"
                          correlation_id: "%REQ(x-correlation-id)%"
                route_config:
                  name: panda_ui_route
                  virtual_hosts:
                    - name: panda_ui_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: panda_ui_cluster
                            timeout: 0s
                http_filters:
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

    - name: clickhouse_http
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8123
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                access_log:
                  - name: envoy.access_loggers.file
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
                      path: /dev/stdout
                      log_format:
                        json_format:
                          backend: clickhouse-http
                          start_time: "%START_TIME%"
                          method: "%REQ(:METHOD)%"
                          path: "%REQ(X-ENVOY-ORIGINAL-PATH?:PATH)%"
                          protocol: "%PROTOCOL%"
                          response_code: "%RESPONSE_CODE%"
                          response_flags: "%RESPONSE_FLAGS%"
                          user_agent: "%REQ(USER-AGENT)%"
                          x_forwarded_for: "%REQ(X-FORWARDED-FOR)%"
                          authority: "%REQ(:AUTHORITY)%"
                          upstream_host: "%UPSTREAM_HOST%"
                          request_duration_ms: "%DURATION%"
                          correlation_id: "%REQ(x-correlation-id)%"
                          # basic_auth: "%REQ(authorization)%"
                route_config:
                  name: clickhouse_http_route
                  virtual_hosts:
                    - name: clickhouse_http_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                            headers:
                              - name: ":method"
                                exact_match: "OPTIONS"
                          direct_response:
                            status: 204
                            body:
                              inline_string: ""
                          response_headers_to_add:
                              - header:
                                  key: "Access-Control-Allow-Origin"
                                  value: "*"
                              - header:
                                  key: "Access-Control-Allow-Methods"
                                  value: "GET, POST, OPTIONS"
                              - header:
                                  key: "Access-Control-Allow-Headers"
                                  value: "Content-Type, X-Correlation-ID"
                              - header:
                                  key: "Access-Control-Max-Age"
                                  value: "86400"
                        - match: { prefix: "/" }
                          route:
                            cluster: clickhouse_cluster_http
                            timeout: 0s
                            cors:
                              allow_origin_string_match:
                                - exact: "*"
                              allow_methods: "GET, POST, OPTIONS"
                              allow_headers: "Content-Type, X-Correlation-ID"
                              max_age: "86400"
                http_filters:
                  # - name: envoy.filters.http.tap
                  #   typed_config:
                  #     "@type": type.googleapis.com/envoy.extensions.filters.http.tap.v3.Tap
                  #     common_config:
                  #       static_config:
                  #         match_config:
                  #           any_match: true
                  #         output_config:
                  #           sinks:
                  #             - format: JSON_BODY_AS_STRING
                  #               file_per_tap:
                  #                 path_prefix: "/tmp/envoy_tap"
                  - name: envoy.filters.http.cors
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.cors.v3.Cors
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

    - name: clickhouse_tcp
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 9001
      filter_chains:
        - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: clickhouse_tcp
                cluster: clickhouse_cluster
                idle_timeout: 0s  # disables idle timeout
                max_connect_attempts: 3
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      log_format:
                        # text_format: "[%START_TIME%] connection from %DOWNSTREAM_REMOTE_ADDRESS% to %UPSTREAM_HOST% sent %BYTES_SENT% bytes, received %BYTES_RECEIVED% bytes\n"
                        json_format:
                          backend: clickhouse-tcp
                          start_time: "%START_TIME%"
                          downstream: "%DOWNSTREAM_REMOTE_ADDRESS%"
                          upstream: "%UPSTREAM_HOST%"
                          bytes_sent: "%BYTES_SENT%"
                          bytes_received: "%BYTES_RECEIVED%"

    - name: mongodb_tcp
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 27017
      filter_chains:
        - filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: mongodb_tcp
                cluster: mongodb_cluster
                idle_timeout: 0s  # disables idle timeout
                max_connect_attempts: 3
                access_log:
                  - name: envoy.access_loggers.stdout
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
                      log_format:
                        # text_format: "[%START_TIME%] connection from %DOWNSTREAM_REMOTE_ADDRESS% to %UPSTREAM_HOST% sent %BYTES_SENT% bytes, received %BYTES_RECEIVED% bytes\n"
                        json_format:
                          backend: mongodb-tcp
                          start_time: "%START_TIME%"
                          downstream: "%DOWNSTREAM_REMOTE_ADDRESS%"
                          upstream: "%UPSTREAM_HOST%"
                          bytes_sent: "%BYTES_SENT%"
                          bytes_received: "%BYTES_RECEIVED%"

  clusters:
    - name: app_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      circuit_breakers:
        thresholds:
          - priority: DEFAULT
            max_connections: 10000
            max_pending_requests: 10000
            max_requests: 10000
      upstream_connection_options:
        tcp_keepalive:
          keepalive_time: 300
          keepalive_interval: 30
          keepalive_probes: 3
      common_http_protocol_options:
        idle_timeout: 300s
        max_connection_duration: 3600s
      lb_policy: LEAST_REQUEST
      outlier_detection:
        interval: 5s
        base_ejection_time: 30s
        max_ejection_percent: 50
        consecutive_5xx: 5
      load_assignment:
        cluster_name: minio_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: app-1
                      port_value: 8000
              - endpoint:
                  address:
                    socket_address:
                      address: app-2
                      port_value: 8000

    - name: panda_ui_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      circuit_breakers:
        thresholds:
          - priority: DEFAULT
            max_connections: 10000
            max_pending_requests: 10000
            max_requests: 10000
      upstream_connection_options:
        tcp_keepalive:
          keepalive_time: 300
          keepalive_interval: 30
          keepalive_probes: 3
      common_http_protocol_options:
        idle_timeout: 300s
        max_connection_duration: 3600s
      lb_policy: LEAST_REQUEST
      outlier_detection:
        interval: 5s
        base_ejection_time: 30s
        max_ejection_percent: 50
        consecutive_5xx: 5
      load_assignment:
        cluster_name: minio_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: p-1
                      port_value: 8081
              - endpoint:
                  address:
                    socket_address:
                      address: p-2
                      port_value: 8081
              - endpoint:
                  address:
                    socket_address:
                      address: p-3
                      port_value: 8081

    - name: minio_cluster
      connect_timeout: 0.25s
      type: STRICT_DNS
      circuit_breakers:
        thresholds:
          - priority: DEFAULT
            max_connections: 10000
            max_pending_requests: 10000
            max_requests: 10000
      upstream_connection_options:
        tcp_keepalive:
          keepalive_time: 300
          keepalive_interval: 30
          keepalive_probes: 3
      common_http_protocol_options:
        idle_timeout: 300s
        max_connection_duration: 3600s
      lb_policy: LEAST_REQUEST
      outlier_detection:
        interval: 5s
        base_ejection_time: 30s
        max_ejection_percent: 50
        consecutive_5xx: 5
      load_assignment:
        cluster_name: minio_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: s3-1
                      port_value: 9000
              - endpoint:
                  address:
                    socket_address:
                      address: s3-2
                      port_value: 9000
              - endpoint:
                  address:
                    socket_address:
                      address: s3-3
                      port_value: 9000
              - endpoint:
                  address:
                    socket_address:
                      address: s3-4
                      port_value: 9000

    - name: clickhouse_cluster
      type: STRICT_DNS
      connect_timeout: 1s
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: clickhouse_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ch-1
                      port_value: 9000
              - endpoint:
                  address:
                    socket_address:
                      address: ch-2
                      port_value: 9000
              - endpoint:
                  address:
                    socket_address:
                      address: ch-3
                      port_value: 9000

    - name: clickhouse_cluster_http
      type: STRICT_DNS
      connect_timeout: 1s
      circuit_breakers:
        thresholds:
          - priority: DEFAULT
            max_connections: 10000
            max_pending_requests: 10000
            max_requests: 10000
      upstream_connection_options:
        tcp_keepalive:
          keepalive_time: 300
          keepalive_interval: 30
          keepalive_probes: 3
      common_http_protocol_options:
        idle_timeout: 300s
        max_connection_duration: 3600s
      lb_policy: LEAST_REQUEST
      outlier_detection:
        interval: 5s
        base_ejection_time: 30s
        max_ejection_percent: 50
        consecutive_5xx: 5
      load_assignment:
        cluster_name: clickhouse_cluster_http
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: ch-1
                      port_value: 8123
              - endpoint:
                  address:
                    socket_address:
                      address: ch-2
                      port_value: 8123
              - endpoint:
                  address:
                    socket_address:
                      address: ch-3
                      port_value: 8123

    - name: mongodb_cluster
      type: STRICT_DNS
      connect_timeout: 1s
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: mongodb_cluster
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: m-1
                      port_value: 27017
              - endpoint:
                  address:
                    socket_address:
                      address: m-2
                      port_value: 27017
              - endpoint:
                  address:
                    socket_address:
                      address: m-3
                      port_value: 27017

admin:
  access_log_path: /dev/stdout
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 9901
